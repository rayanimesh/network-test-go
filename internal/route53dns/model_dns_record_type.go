/*
 * DNS Service
 *
 * Sevice for managing DNS with route53
 *
 * API version: 0.0.1
 * Contact: iitr.animesh@gmail.com
 * Generated by: OpenAPI Generator (https://openapi-generator.tech)
 */

package route53dns


import (
	"fmt"
)



type DnsRecordType string

// List of DnsRecordType
const (
	SOA DnsRecordType = "SOA"
	A DnsRecordType = "A"
	TXT DnsRecordType = "TXT"
	NS DnsRecordType = "NS"
	CNAME DnsRecordType = "CNAME"
	MX DnsRecordType = "MX"
	NAPTR DnsRecordType = "NAPTR"
	PTR DnsRecordType = "PTR"
	SRV DnsRecordType = "SRV"
	SPF DnsRecordType = "SPF"
	AAAA DnsRecordType = "AAAA"
	CAA DnsRecordType = "CAA"
	DS DnsRecordType = "DS"
)

// AllowedDnsRecordTypeEnumValues is all the allowed values of DnsRecordType enum
var AllowedDnsRecordTypeEnumValues = []DnsRecordType{
	"SOA",
	"A",
	"TXT",
	"NS",
	"CNAME",
	"MX",
	"NAPTR",
	"PTR",
	"SRV",
	"SPF",
	"AAAA",
	"CAA",
	"DS",
}

// validDnsRecordTypeEnumValue provides a map of DnsRecordTypes for fast verification of use input
var validDnsRecordTypeEnumValues = map[DnsRecordType]struct{}{
	"SOA": {},
	"A": {},
	"TXT": {},
	"NS": {},
	"CNAME": {},
	"MX": {},
	"NAPTR": {},
	"PTR": {},
	"SRV": {},
	"SPF": {},
	"AAAA": {},
	"CAA": {},
	"DS": {},
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v DnsRecordType) IsValid() bool {
	_, ok := validDnsRecordTypeEnumValues[v]
	return ok
}

// NewDnsRecordTypeFromValue returns a pointer to a valid DnsRecordType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewDnsRecordTypeFromValue(v string) (DnsRecordType, error) {
	ev := DnsRecordType(v)
	if ev.IsValid() {
		return ev, nil
	} else {
		return "", fmt.Errorf("invalid value '%v' for DnsRecordType: valid values are %v", v, AllowedDnsRecordTypeEnumValues)
	}
}



// AssertDnsRecordTypeRequired checks if the required fields are not zero-ed
func AssertDnsRecordTypeRequired(obj DnsRecordType) error {
	return nil
}

// AssertDnsRecordTypeConstraints checks if the values respects the defined constraints
func AssertDnsRecordTypeConstraints(obj DnsRecordType) error {
	return nil
}
